# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: jpgouin/rancher-ai-assistant-backend
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.2-rc1"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# Rancher public API URL
rancherUrl: "https://rancher.example.com"

conversationsPvcSize: 1Gi
conversationsStorageClass: standard

# customSystemPrompt: "You are a helpful AI assistant that can answer questions about Rancher, Kubernetes, and AI. You can also create pods in the local cluster using the Rancher API. If you don't know the answer, you can ask for more information or suggest to look it up."

# Ollama configuration
# If you want to use an external Ollama server, set this to true and provide the URL.
# externalOllamaUrl: ""
# Internal ollama configuration
ollama:
  enabled: true
  ollama:
    gpu:
      # -- Enable GPU integration
      enabled: false
      
      # -- GPU type: 'nvidia' or 'amd'
      type: 'nvidia'
      
      # -- Specify the number of GPU to 1
      number: 1
    
    # -- List of models to pull at container startup
    models:
      pull:
        - llama3.1:8b
        - qwen3:4b
        - qwen3:1.7b

mcpo:
  image:
    repository: ghcr.io/alessandro-festa/mcpo
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  key: "top-secret"
toolbox:
  image:
    repository: us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox
    # repository: jpgouin/genai-toolbox
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.8.0"
    # tag: "dev"
toolboxRancher:
  image:
    repository: ghcr.io/brizzai/auto-mcp
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /alive
    port: http
readinessProbe:
  httpGet:
    path: /alive
    port: http


